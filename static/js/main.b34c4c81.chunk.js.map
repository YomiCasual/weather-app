{"version":3,"sources":["components/Navbar.js","components/Weather.js","components/Input.js","index.js"],"names":["header","className","Weather","cityWeather","state","error","cityName","loading","Object","values","length","name","lat","lon","description","temp","pressure","humidity","Math","round","Input","handleInput","fetchItem","onSubmit","e","preventDefault","placeholder","onChange","value","App","setState","target","a","fetch","process","request","json","response","data","main","weather","coord","searchItem","then","catch","err","console","log","REACT_APP_CLIENT_ID","Navbar","this","Component","render","document","getElementById"],"mappings":"+MAEe,G,MAAA,gBAAEA,EAAF,EAAEA,OAAF,OACb,qBAAKC,UAAU,SAAf,SACA,6BAAKD,QCgDQE,EAlDC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,MACXC,GAAkBD,EAA5BE,SAA4BF,EAAlBC,OAEpB,GAFsCD,EAAXG,QAGzB,OACG,qBAAKN,UAAU,eAAf,SACD,oBAAIA,UAAU,cAAd,0BAKJ,GAA0C,IAAtCO,OAAOC,OAAON,GAAaO,SAAiBL,EAC9C,OACG,sBAAKJ,UAAU,eAAf,UACD,oBAAIA,UAAU,aAAd,wCACA,mBAAGA,UAAU,YAAb,2CAMJ,GAAII,EACF,OACE,qBAAKJ,UAAU,eAAf,SACA,oBAAIA,UAAU,cAAd,8CAxBsC,IA6BjCU,EAA0DR,EAA1DQ,KAAMC,EAAoDT,EAApDS,IAAKC,EAA+CV,EAA/CU,IAAKC,EAA0CX,EAA1CW,YAAcC,EAA4BZ,EAA5BY,KAAMC,EAAsBb,EAAtBa,SAAUC,EAAYd,EAAZc,SACvD,OACI,sBAAKhB,UAAU,eAAf,UACA,oBAAIA,UAAU,aAAd,SAA4BU,IAC5B,sBAAKV,UAAU,aAAf,UACA,2CAAcW,KACd,4CAAeC,QAGf,qBAAIZ,UAAU,YAAd,UAA2BiB,KAAKC,MAAMJ,GAAM,qCAA5C,OACA,mBAAGd,UAAU,YAAb,SAA0Ba,IAE1B,sBAAKb,UAAU,gBAAf,UACA,2CAAcgB,KACd,2CAAcD,EAAd,gBCnBWI,EAxBD,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,UAAWlB,EAAW,EAAXA,MAQtC,OACE,qBAAKH,UAAU,OAAf,SACA,uBAAMsB,SARa,SAACC,GACpBA,EAAEC,iBAEFH,KAKA,UACA,uBACCrB,UAAU,cACVyB,YAAY,oBACZf,KAAK,WACLgB,SAAWN,EACXO,MAAOxB,EAAME,WAEb,wBAAQL,UAAU,kBAAlB,0BCZC4B,E,4MAEJzB,MAAO,CACLE,SAAU,GACVH,YAAa,GACbI,SAAS,EACTF,OAAO,G,EAGTgB,YAAc,SAACG,GACb,EAAKM,SAAL,eACGN,EAAEO,OAAOpB,KAAMa,EAAEO,OAAOH,S,EAI7BN,UAAY,WAAO,IACThB,EAAa,EAAKF,MAAlBE,SAEN,EAAKwB,SAAS,CACZvB,SAAS,IAGK,uCAAG,WAAMD,GAAN,qCAAA0B,EAAA,sEACGC,MAAM,qDAAD,OAAsD3B,EAAtD,kBAAwE4B,qCADhF,cACbC,EADa,gBAGGA,EAAQC,OAHX,cAGdC,EAHc,OAMb1B,GAFD2B,EAAOD,GAEN1B,KANa,EAOe2B,EAAKC,KAAjCtB,EAPa,EAObA,SAAUD,EAPG,EAOHA,SAAUD,EAPP,EAOOA,KACpBD,EAAewB,EAAKE,QAAQ,GAA5B1B,YARa,EASCwB,EAAKG,MAAlB7B,EATY,EASZA,IAAKC,EATO,EASPA,IATO,kBAWb,CAACF,OAAMM,WAAUD,WAAUD,OAAMD,cAAaF,MAAKC,QAXtC,4CAAH,qDAgBlB6B,CAAWpC,GAAUqC,MAAK,SAAAL,GACxB,EAAKR,SAAS,CACZxB,SAAU,GACVH,YAAamC,EACbjC,OAAO,EACPE,SAAS,OAEVqC,OAAM,SAAAC,GACP,EAAKf,SAAS,CACZzB,OAAO,EACPE,SAAS,Q,uDAOb,OADAuC,QAAQC,IAAIC,qBAEV,gCACA,cAACC,EAAD,CAAQjD,OAAO,gBACf,cAAC,EAAD,CACAqB,YAAa6B,KAAK7B,YAClBC,UAAW4B,KAAK5B,UAChBlB,MAAO8C,KAAK9C,QAEZ,cAAC,EAAD,CAASD,YAAa+C,KAAK9C,MAAMD,YAAaC,MAAO8C,KAAK9C,e,GA/D9C+C,aAqElBC,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b34c4c81.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default ({header}) => (\r\n  <div className=\"navbar\">\r\n  <h3>{header}</h3>\r\n  </div>\r\n)","import React from 'react'\r\n\r\nconst Weather = ({cityWeather, state}) => {\r\n  const { cityName, error, loading} = state\r\n\r\nif (loading) {\r\n  return (\r\n     <div className=\"weather-data\">\r\n    <h3 className=\"error-class\">Loading...</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\nif (Object.values(cityWeather).length === 0 && !error  )  {\r\n  return (\r\n     <div className=\"weather-data\">\r\n    <h3 className=\"city-title\">Welcome to The Weather App</h3>\r\n    <p className=\"city-desc\">Enter a city name to begin</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nif (error) {\r\n  return (\r\n    <div className=\"weather-data\">\r\n    <h3 className=\"error-class\">Please Enter a Valid City Name</h3>\r\n    </div>\r\n  )\r\n}\r\n\r\n const { name, lat, lon, description , temp, pressure, humidity} = cityWeather\r\nreturn (\r\n    <div className=\"weather-data\">\r\n    <h3 className=\"city-title\">{name}</h3>\r\n    <div className=\"city-coord\">\r\n    <p>Latitude: {lat}</p>\r\n    <p>Longitude: {lon}</p>\r\n    </div>\r\n    \r\n    <h2 className=\"city-temp\">{Math.round(temp)}<span>0</span>C</h2>\r\n    <p className=\"city-desc\">{description}</p>\r\n\r\n    <div className=\"city-add-data\">\r\n    <p>Humidity: {humidity}</p>\r\n    <p>Pressure: {pressure}atm</p>\r\n    </div>\r\n    </div>\r\n)\r\n \r\n}\r\n\r\nexport default Weather","import React from 'react'\r\n\r\nconst Input = ({handleInput, fetchItem, state}) => {\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n   \r\n    fetchItem()\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n    <form onSubmit={handleSubmit}>\r\n    <input\r\n     className=\"input-field\"\r\n     placeholder=\"Enter the city...\"\r\n     name=\"cityName\"\r\n     onChange= {handleInput}\r\n     value={state.cityName}\r\n     />\r\n     <button className=\"btn btn-primary\">Submit</button>\r\n     </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\n\nimport Navbar from './components/Navbar'\nimport Weather from './components/Weather'\nimport Input from './components/Input'\n\nclass App extends Component {\n\n  state ={\n    cityName: \"\",\n    cityWeather: {},\n    loading: false,\n    error: false\n  }\n\n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n\n  fetchItem = () => {\n    const { cityName } = this.state\n\n      this.setState({\n        loading: true\n      })\n\n      const searchItem = async(cityName) => {\n      const request = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.REACT_APP_CLIENT_ID}`);\n\n     const response = await request.json()\n     const data = response\n      \n     const {name} = data\n     const {humidity, pressure, temp} = data.main\n     const {description} = data.weather[0]\n     const { lat, lon } = data.coord\n\n     return {name, humidity, pressure, temp, description, lat, lon}\n    }\n\n    \n\n    searchItem(cityName).then(data => {\n      this.setState({\n        cityName: '',\n        cityWeather: data,\n        error: false,\n        loading: false,\n      })\n    }).catch(err =>{\n      this.setState({\n        error: true,\n        loading: false,\n      })\n    })\n   \n  }\n  render() {\n    console.log(REACT_APP_CLIENT_ID)\n    return (\n      <div>\n      <Navbar header=\"Weather App\"/>\n      <Input \n      handleInput={this.handleInput}\n      fetchItem={this.fetchItem}\n      state={this.state}\n       />\n      <Weather cityWeather={this.state.cityWeather} state={this.state}/>\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}